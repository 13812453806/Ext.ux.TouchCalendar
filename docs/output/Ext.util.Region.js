Ext.data.JsonP.Ext_util_Region({"singleton":false,"statics":{"cfg":[],"property":[],"css_var":[],"event":[],"css_mixin":[],"method":[{"owner":"Ext.Base","meta":{"static":true},"name":"addMembers","id":"static-method-addMembers","tagname":"method"},{"owner":"Ext.Base","meta":{"static":true},"name":"addStatics","id":"static-method-addStatics","tagname":"method"},{"owner":"Ext.Base","meta":{"static":true},"name":"create","id":"static-method-create","tagname":"method"},{"owner":"Ext.Base","meta":{"static":true},"name":"createAlias","id":"static-method-createAlias","tagname":"method"},{"owner":"Ext.util.Region","meta":{"static":true},"name":"from","id":"static-method-from","tagname":"method"},{"owner":"Ext.Base","meta":{"static":true},"name":"getName","id":"static-method-getName","tagname":"method"},{"owner":"Ext.util.Region","meta":{"static":true},"name":"getRegion","id":"static-method-getRegion","tagname":"method"},{"owner":"Ext.Base","meta":{"deprecated":{"version":"4.1.0","text":"Please use {@link Ext#define Ext.define} instead"},"static":true},"name":"override","id":"static-method-override","tagname":"method"}]},"files":[{"filename":"Ext.ux.TouchCalendarEvents-all-min-debug.js","href":"Ext.ux.TouchCalendarEvents-all-min-debug2.html#Ext-util-Region"},{"filename":"Ext.ux.TouchCalendarEvents-all-min.js","href":"Ext.ux.TouchCalendarEvents-all-min2.html#Ext-util-Region"},{"filename":"Ext.ux.TouchCalendarEvents-min-debug.js","href":"Ext.ux.TouchCalendarEvents-min-debug2.html#Ext-util-Region"},{"filename":"Ext.ux.TouchCalendarEvents-min.js","href":"Ext.ux.TouchCalendarEvents-min2.html#Ext-util-Region"},{"filename":"sencha-touch-all-debug.js","href":"sencha-touch-all-debug.html#Ext-util-Region"},{"filename":"Region.js","href":"Region.html#Ext-util-Region"},{"filename":"Ext.ux.TouchCalendar-min-debug.js","href":"Ext.ux.TouchCalendar-min-debug2.html#Ext-util-Region"},{"filename":"Ext.ux.TouchCalendar-min.js","href":"Ext.ux.TouchCalendar-min2.html#Ext-util-Region"}],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'><a href='#!/api/Ext.Base' rel='Ext.Base' class='docClass'>Ext.Base</a><div class='subclass '><strong>Ext.util.Region</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/Ext.ux.TouchCalendarEvents-all-min-debug2.html#Ext-util-Region' target='_blank'>Ext.ux.TouchCalendarEvents-all-min-debug.js</a></div><div class='dependency'><a href='source/Ext.ux.TouchCalendarEvents-all-min2.html#Ext-util-Region' target='_blank'>Ext.ux.TouchCalendarEvents-all-min.js</a></div><div class='dependency'><a href='source/Ext.ux.TouchCalendarEvents-min-debug2.html#Ext-util-Region' target='_blank'>Ext.ux.TouchCalendarEvents-min-debug.js</a></div><div class='dependency'><a href='source/Ext.ux.TouchCalendarEvents-min2.html#Ext-util-Region' target='_blank'>Ext.ux.TouchCalendarEvents-min.js</a></div><div class='dependency'><a href='source/sencha-touch-all-debug.html#Ext-util-Region' target='_blank'>sencha-touch-all-debug.js</a></div><div class='dependency'><a href='source/Region.html#Ext-util-Region' target='_blank'>Region.js</a></div><div class='dependency'><a href='source/Ext.ux.TouchCalendar-min-debug2.html#Ext-util-Region' target='_blank'>Ext.ux.TouchCalendar-min-debug.js</a></div><div class='dependency'><a href='source/Ext.ux.TouchCalendar-min2.html#Ext-util-Region' target='_blank'>Ext.ux.TouchCalendar-min.js</a></div></pre><div class='doc-contents'><p>Represents a rectangular region and provides a number of utility methods\nto compare regions.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.util.Region'>Ext.util.Region</span><br/><a href='source/Ext.ux.TouchCalendar-min2.html#Ext-util-Region-property-' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Region-property-' class='name expandable'></a><span> : Object</span></div><div class='description'><div class='short'>@copyright      (c) 2011, by SwarmOnline.com\n@date           2nd November 2011\n@version        0.1\n@documentation\n@we...</div><div class='long'><p>@copyright      (c) 2011, by SwarmOnline.com\n@date           2nd November 2011\n@version        0.1\n@documentation<br/>\n@website            http://www.swarmonline.com</p>\n</div></div></div><div id='property-self' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-property-self' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-property-self' class='name expandable'>self</a><span> : <a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a></span><strong class='protected signature'>protected</strong></div><div class='description'><div class='short'>Get the reference to the current class from which this object was instantiated. ...</div><div class='long'><p>Get the reference to the current class from which this object was instantiated. Unlike <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>,\n<code>this.self</code> is scope-dependent and it's meant to be used for dynamic inheritance. See <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>\nfor a detailed comparison</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        alert(this.self.speciesName); / dependentOL on 'this'\n    },\n\n    clone: function() {\n        return new this.self();\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n    statics: {\n        speciesName: 'Snow Leopard'         // My.SnowLeopard.speciesName = 'Snow Leopard'\n    }\n});\n\nvar cat = new My.Cat();                     // alerts 'Cat'\nvar snowLeopard = new My.SnowLeopard();     // alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));             // alerts 'My.SnowLeopard'\n</code></pre>\n</div></div></div></div></div><div class='members-section'><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Instance Methods</h3><div id='method-constructor' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.util.Region'>Ext.util.Region</span><br/><a href='source/Region.html#Ext-util-Region-method-constructor' target='_blank' class='view-source'>view source</a></div><strong class='new-keyword'>new</strong><a href='#!/api/Ext.util.Region-method-constructor' class='name expandable'>Ext.util.Region</a>( <span class='pre'>Number top, Number right, Number bottom, Number left</span> ) : Object</div><div class='description'><div class='short'>Creates new Region. ...</div><div class='long'><p>Creates new Region.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>top</span> : Number<div class='sub-desc'><p>Top</p>\n</div></li><li><span class='pre'>right</span> : Number<div class='sub-desc'><p>Right</p>\n</div></li><li><span class='pre'>bottom</span> : Number<div class='sub-desc'><p>Bottom</p>\n</div></li><li><span class='pre'>left</span> : Number<div class='sub-desc'><p>Left</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-adjust' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.util.Region'>Ext.util.Region</span><br/><a href='source/Region.html#Ext-util-Region-method-adjust' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Region-method-adjust' class='name expandable'>adjust</a>( <span class='pre'>Number top, Number right, Number bottom, Number left</span> )</div><div class='description'><div class='short'>Modifies the current region to be adjusted by offsets. ...</div><div class='long'><p>Modifies the current region to be adjusted by offsets.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>top</span> : Number<div class='sub-desc'><p>top offset</p>\n</div></li><li><span class='pre'>right</span> : Number<div class='sub-desc'><p>right offset</p>\n</div></li><li><span class='pre'>bottom</span> : Number<div class='sub-desc'><p>bottom offset</p>\n</div></li><li><span class='pre'>left</span> : Number<div class='sub-desc'><p>left offset</p>\n</div></li></ul></div></div></div><div id='method-callOverridden' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-method-callOverridden' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-callOverridden' class='name expandable'>callOverridden</a>( <span class='pre'>Array/Arguments args</span> ) : Object<strong class='protected signature'>protected</strong></div><div class='description'><div class='short'>Call the original method that was previously overridden with override\n\nExt.define('My.Cat', {\n    constructor: functi...</div><div class='long'><p>Call the original method that was previously overridden with <a href=\"#!/api/Ext.Base-static-method-override\" rel=\"Ext.Base-static-method-override\" class=\"docClass\">override</a></p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        var instance = this.callOverridden();\n\n        alert(\"Meeeeoooowwww\");\n\n        return instance;\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>args</span> : Array/Arguments<div class='sub-desc'><p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callOverridden(arguments)</code></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>Returns the result of calling the overridden method</p>\n</div></li></ul></div></div></div><div id='method-callParent' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-method-callParent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-callParent' class='name expandable'>callParent</a>( <span class='pre'>Array/Arguments args</span> ) : Object<strong class='protected signature'>protected</strong></div><div class='description'><div class='short'>Call the \"parent\" method of the current method. ...</div><div class='long'><p>Call the \"parent\" method of the current method. That is the method previously\noverridden by derivation or by an override (see <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>).</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Base', {\n     constructor: function (x) {\n         this.x = x;\n     },\n\n     statics: {\n         method: function (x) {\n             return x;\n         }\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived', {\n     extend: 'My.Base',\n\n     constructor: function () {\n         this.callParent([21]);\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // alerts 21\n</code></pre>\n\n<p>This can be used with an override as follows:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.DerivedOverride', {\n     override: 'My.Derived',\n\n     constructor: function (x) {\n         this.callParent([x*2]); // calls original My.Derived constructor\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // now alerts 42\n</code></pre>\n\n<p>This also works with static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2', {\n     extend: 'My.Base',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // calls My.Base.method\n         }\n     }\n });\n\n alert(My.Base.method(10);     // alerts 10\n alert(My.Derived2.method(10); // alerts 20\n</code></pre>\n\n<p>Lastly, it also works with overridden static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2Override', {\n     override: 'My.Derived2',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // calls My.Derived2.method\n         }\n     }\n });\n\n alert(My.Derived2.method(10); // now alerts 40\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>args</span> : Array/Arguments<div class='sub-desc'><p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callParent(arguments)</code></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>Returns the result of calling the parent method</p>\n</div></li></ul></div></div></div><div id='method-constrainTo' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.util.Region'>Ext.util.Region</span><br/><a href='source/Region.html#Ext-util-Region-method-constrainTo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Region-method-constrainTo' class='name expandable'>constrainTo</a>( <span class='pre'><a href=\"#!/api/Ext.util.Region\" rel=\"Ext.util.Region\" class=\"docClass\">Ext.util.Region</a> targetRegion</span> )</div><div class='description'><div class='short'>Modifies the current region to be constrained to the targetRegion. ...</div><div class='long'><p>Modifies the current region to be constrained to the targetRegion.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>targetRegion</span> : <a href=\"#!/api/Ext.util.Region\" rel=\"Ext.util.Region\" class=\"docClass\">Ext.util.Region</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-contains' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.util.Region'>Ext.util.Region</span><br/><a href='source/Region.html#Ext-util-Region-method-contains' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Region-method-contains' class='name expandable'>contains</a>( <span class='pre'><a href=\"#!/api/Ext.util.Region\" rel=\"Ext.util.Region\" class=\"docClass\">Ext.util.Region</a> region</span> )</div><div class='description'><div class='short'>Checks if this region completely contains the region that is passed in. ...</div><div class='long'><p>Checks if this region completely contains the region that is passed in.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>region</span> : <a href=\"#!/api/Ext.util.Region\" rel=\"Ext.util.Region\" class=\"docClass\">Ext.util.Region</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-copy' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.util.Region'>Ext.util.Region</span><br/><a href='source/Region.html#Ext-util-Region-method-copy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Region-method-copy' class='name expandable'>copy</a>( <span class='pre'></span> ) : <a href=\"#!/api/Ext.util.Region\" rel=\"Ext.util.Region\" class=\"docClass\">Ext.util.Region</a></div><div class='description'><div class='short'>Copy a new instance ...</div><div class='long'><p>Copy a new instance</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.util.Region\" rel=\"Ext.util.Region\" class=\"docClass\">Ext.util.Region</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-equals' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.util.Region'>Ext.util.Region</span><br/><a href='source/Region.html#Ext-util-Region-method-equals' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Region-method-equals' class='name expandable'>equals</a>( <span class='pre'><a href=\"#!/api/Ext.util.Region\" rel=\"Ext.util.Region\" class=\"docClass\">Ext.util.Region</a> region</span> ) : Boolean</div><div class='description'><div class='short'>Check whether this region is equivalent to the given region ...</div><div class='long'><p>Check whether this region is equivalent to the given region</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>region</span> : <a href=\"#!/api/Ext.util.Region\" rel=\"Ext.util.Region\" class=\"docClass\">Ext.util.Region</a><div class='sub-desc'><p>The region to compare with</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getInitialConfig' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-method-getInitialConfig' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-getInitialConfig' class='name expandable'>getInitialConfig</a>( <span class='pre'>[String name]</span> ) : Object/Mixed</div><div class='description'><div class='short'>Returns the initial configuration passed to constructor. ...</div><div class='long'><p>Returns the initial configuration passed to constructor.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String (optional)<div class='sub-desc'><p>When supplied, value for particular configuration\noption is returned, otherwise the full config object is returned.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object/Mixed</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getOutOfBoundOffset' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.util.Region'>Ext.util.Region</span><br/><a href='source/Region.html#Ext-util-Region-method-getOutOfBoundOffset' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Region-method-getOutOfBoundOffset' class='name expandable'>getOutOfBoundOffset</a>( <span class='pre'>String axis, <a href=\"#!/api/Ext.util.Point\" rel=\"Ext.util.Point\" class=\"docClass\">Ext.util.Point</a> p</span> ) : <a href=\"#!/api/Ext.util.Region\" rel=\"Ext.util.Region\" class=\"docClass\">Ext.util.Region</a></div><div class='description'><div class='short'>Get the offset amount of a point outside the region ...</div><div class='long'><p>Get the offset amount of a point outside the region</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>axis</span> : String<div class='sub-desc'><p>optional</p>\n</div></li><li><span class='pre'>p</span> : <a href=\"#!/api/Ext.util.Point\" rel=\"Ext.util.Point\" class=\"docClass\">Ext.util.Point</a><div class='sub-desc'><p>the point</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.util.Region\" rel=\"Ext.util.Region\" class=\"docClass\">Ext.util.Region</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getOutOfBoundOffsetX' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.util.Region'>Ext.util.Region</span><br/><a href='source/Region.html#Ext-util-Region-method-getOutOfBoundOffsetX' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Region-method-getOutOfBoundOffsetX' class='name expandable'>getOutOfBoundOffsetX</a>( <span class='pre'>Number p</span> ) : Number</div><div class='description'><div class='short'>Get the offset amount on the x-axis ...</div><div class='long'><p>Get the offset amount on the x-axis</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>p</span> : Number<div class='sub-desc'><p>the offset</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getOutOfBoundOffsetY' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.util.Region'>Ext.util.Region</span><br/><a href='source/Region.html#Ext-util-Region-method-getOutOfBoundOffsetY' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Region-method-getOutOfBoundOffsetY' class='name expandable'>getOutOfBoundOffsetY</a>( <span class='pre'>Number p</span> ) : Number</div><div class='description'><div class='short'>Get the offset amount on the y-axis ...</div><div class='long'><p>Get the offset amount on the y-axis</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>p</span> : Number<div class='sub-desc'><p>the offset</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-initConfig' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-method-initConfig' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-initConfig' class='name expandable'>initConfig</a>( <span class='pre'>Object instanceConfig</span> ) : Object<strong class='protected signature'>protected</strong></div><div class='description'><div class='short'>Initialize configuration for this class. ...</div><div class='long'><p>Initialize configuration for this class. a typical example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Class', {\n    // The default config\n    config: {\n        name: 'Awesome',\n        isAwesome: true\n    },\n\n    constructor: function(config) {\n        this.initConfig(config);\n    }\n});\n\nvar awesome = new My.awesome.Class({\n    name: 'Super Awesome'\n});\n\nalert(awesome.getName()); // 'Super Awesome'\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>instanceConfig</span> : Object<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>mixins The mixin prototypes as key - value pairs</p>\n</div></li></ul></div></div></div><div id='method-intersect' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.util.Region'>Ext.util.Region</span><br/><a href='source/Region.html#Ext-util-Region-method-intersect' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Region-method-intersect' class='name expandable'>intersect</a>( <span class='pre'><a href=\"#!/api/Ext.util.Region\" rel=\"Ext.util.Region\" class=\"docClass\">Ext.util.Region</a> region</span> ) : <a href=\"#!/api/Ext.util.Region\" rel=\"Ext.util.Region\" class=\"docClass\">Ext.util.Region</a>/Boolean</div><div class='description'><div class='short'>Checks if this region intersects the region passed in. ...</div><div class='long'><p>Checks if this region intersects the region passed in.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>region</span> : <a href=\"#!/api/Ext.util.Region\" rel=\"Ext.util.Region\" class=\"docClass\">Ext.util.Region</a><div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.util.Region\" rel=\"Ext.util.Region\" class=\"docClass\">Ext.util.Region</a>/Boolean</span><div class='sub-desc'><p>Returns the intersected region or false if there is no intersection.</p>\n</div></li></ul></div></div></div><div id='method-isOutOfBound' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.util.Region'>Ext.util.Region</span><br/><a href='source/Region.html#Ext-util-Region-method-isOutOfBound' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Region-method-isOutOfBound' class='name expandable'>isOutOfBound</a>( <span class='pre'>String axis, <a href=\"#!/api/Ext.util.Point\" rel=\"Ext.util.Point\" class=\"docClass\">Ext.util.Point</a>/Number p</span> ) : Boolean</div><div class='description'><div class='short'>Check whether the point / offset is out of bound ...</div><div class='long'><p>Check whether the point / offset is out of bound</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>axis</span> : String<div class='sub-desc'><p>optional</p>\n</div></li><li><span class='pre'>p</span> : <a href=\"#!/api/Ext.util.Point\" rel=\"Ext.util.Point\" class=\"docClass\">Ext.util.Point</a>/Number<div class='sub-desc'><p>the point / offset</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-isOutOfBoundX' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.util.Region'>Ext.util.Region</span><br/><a href='source/Region.html#Ext-util-Region-method-isOutOfBoundX' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Region-method-isOutOfBoundX' class='name expandable'>isOutOfBoundX</a>( <span class='pre'>Number p</span> ) : Boolean</div><div class='description'><div class='short'>Check whether the offset is out of bound in the x-axis ...</div><div class='long'><p>Check whether the offset is out of bound in the x-axis</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>p</span> : Number<div class='sub-desc'><p>the offset</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-isOutOfBoundY' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.util.Region'>Ext.util.Region</span><br/><a href='source/Region.html#Ext-util-Region-method-isOutOfBoundY' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Region-method-isOutOfBoundY' class='name expandable'>isOutOfBoundY</a>( <span class='pre'>Number p</span> ) : Boolean</div><div class='description'><div class='short'>Check whether the offset is out of bound in the y-axis ...</div><div class='long'><p>Check whether the offset is out of bound in the y-axis</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>p</span> : Number<div class='sub-desc'><p>the offset</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-partial' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.util.Region'>Ext.util.Region</span><br/><a href='source/Ext.ux.TouchCalendar-min2.html#Ext-util-Region-method-partial' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Region-method-partial' class='name expandable'>partial</a>( <span class='pre'>Object region</span> )</div><div class='description'><div class='short'>Figures out if the Event Bar passed in is within the boundaries of the current Date Cell (this) ...</div><div class='long'><p>Figures out if the Event Bar passed in is within the boundaries of the current Date Cell (this)</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>region</span> : Object<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-round' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.util.Region'>Ext.util.Region</span><br/><a href='source/Region.html#Ext-util-Region-method-round' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Region-method-round' class='name expandable'>round</a>( <span class='pre'></span> ) : <a href=\"#!/api/Ext.util.Region\" rel=\"Ext.util.Region\" class=\"docClass\">Ext.util.Region</a></div><div class='description'><div class='short'>Round all the properties of this region ...</div><div class='long'><p>Round all the properties of this region</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.util.Region\" rel=\"Ext.util.Region\" class=\"docClass\">Ext.util.Region</a></span><div class='sub-desc'><p>this This Region</p>\n</div></li></ul></div></div></div><div id='method-statics' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-method-statics' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-statics' class='name expandable'>statics</a>( <span class='pre'></span> ) : <a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a><strong class='protected signature'>protected</strong></div><div class='description'><div class='short'>Get the reference to the class from which this object was instantiated. ...</div><div class='long'><p>Get the reference to the class from which this object was instantiated. Note that unlike <a href=\"#!/api/Ext.Base-property-self\" rel=\"Ext.Base-property-self\" class=\"docClass\">self</a>,\n<code>this.statics()</code> is scope-independent and it always returns the class from which it was called, regardless of what\n<code>this</code> points to during run-time</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        totalCreated: 0,\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        var statics = this.statics();\n\n        alert(statics.speciesName);     // always equals to 'Cat' no matter what 'this' refers to\n                                        // equivalent to: My.Cat.speciesName\n\n        alert(this.self.speciesName);   // dependent on 'this'\n\n        statics.totalCreated++;\n    },\n\n    clone: function() {\n        var cloned = new this.self;                      // dependent on 'this'\n\n        cloned.groupName = this.statics().speciesName;   // equivalent to: My.Cat.speciesName\n\n        return cloned;\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n\n    statics: {\n        speciesName: 'Snow Leopard'     // My.SnowLeopard.speciesName = 'Snow Leopard'\n    },\n\n    constructor: function() {\n        this.callParent();\n    }\n});\n\nvar cat = new My.Cat();                 // alerts 'Cat', then alerts 'Cat'\n\nvar snowLeopard = new My.SnowLeopard(); // alerts 'Cat', then alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));         // alerts 'My.SnowLeopard'\nalert(clone.groupName);                 // alerts 'Cat'\n\nalert(My.Cat.totalCreated);             // alerts 3\n</code></pre>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-toString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.util.Region'>Ext.util.Region</span><br/><a href='source/Region.html#Ext-util-Region-method-toString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Region-method-toString' class='name expandable'>toString</a>( <span class='pre'></span> ) : String</div><div class='description'><div class='short'>Dump this to an eye-friendly string, great for debugging ...</div><div class='long'><p>Dump this to an eye-friendly string, great for debugging</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>For example <code>Region[0,1,3,2]</code></p>\n</div></li></ul></div></div></div><div id='method-translateBy' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.util.Region'>Ext.util.Region</span><br/><a href='source/Region.html#Ext-util-Region-method-translateBy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Region-method-translateBy' class='name expandable'>translateBy</a>( <span class='pre'>Object offset</span> ) : <a href=\"#!/api/Ext.util.Region\" rel=\"Ext.util.Region\" class=\"docClass\">Ext.util.Region</a></div><div class='description'><div class='short'>Translate this region by the given offset amount ...</div><div class='long'><p>Translate this region by the given offset amount</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>offset</span> : Object<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.util.Region\" rel=\"Ext.util.Region\" class=\"docClass\">Ext.util.Region</a></span><div class='sub-desc'><p>this This Region</p>\n</div></li></ul></div></div></div><div id='method-union' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.util.Region'>Ext.util.Region</span><br/><a href='source/Region.html#Ext-util-Region-method-union' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Region-method-union' class='name expandable'>union</a>( <span class='pre'><a href=\"#!/api/Ext.util.Region\" rel=\"Ext.util.Region\" class=\"docClass\">Ext.util.Region</a> region</span> )</div><div class='description'><div class='short'>Returns the smallest region that contains the current AND targetRegion. ...</div><div class='long'><p>Returns the smallest region that contains the current AND targetRegion.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>region</span> : <a href=\"#!/api/Ext.util.Region\" rel=\"Ext.util.Region\" class=\"docClass\">Ext.util.Region</a><div class='sub-desc'>\n</div></li></ul></div></div></div></div><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Static Methods</h3><div id='static-method-addMembers' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-static-method-addMembers' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-addMembers' class='name expandable'>addMembers</a>( <span class='pre'>Object members</span> )<strong class='static signature'>static</strong></div><div class='description'><div class='short'>Add methods / properties to the prototype of this class. ...</div><div class='long'><p>Add methods / properties to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Cat', {\n    constructor: function() {\n        ...\n    }\n});\n\n My.awesome.Cat.implement({\n     meow: function() {\n        alert('Meowww...');\n     }\n });\n\n var kitty = new My.awesome.Cat;\n kitty.meow();\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>members</span> : Object<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='static-method-addStatics' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-static-method-addStatics' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-addStatics' class='name expandable'>addStatics</a>( <span class='pre'>Object members</span> ) : <a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a><strong class='static signature'>static</strong></div><div class='description'><div class='short'>Add / override static properties of this class. ...</div><div class='long'><p>Add / override static properties of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.addStatics({\n    someProperty: 'someValue',      // My.cool.Class.someProperty = 'someValue'\n    method1: function() { ... },    // My.cool.Class.method1 = function() { ... };\n    method2: function() { ... }     // My.cool.Class.method2 = function() { ... };\n});\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>members</span> : Object<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='static-method-create' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-static-method-create' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-create' class='name expandable'>create</a>( <span class='pre'></span> ) : Object<strong class='static signature'>static</strong></div><div class='description'><div class='short'>Create a new instance of this Class. ...</div><div class='long'><p>Create a new instance of this Class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.create({\n    someConfig: true\n});\n</code></pre>\n\n<p>All parameters are passed to the constructor of the class.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>the created instance.</p>\n</div></li></ul></div></div></div><div id='static-method-createAlias' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-static-method-createAlias' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-createAlias' class='name expandable'>createAlias</a>( <span class='pre'>String/Object alias, String/Object origin</span> )<strong class='static signature'>static</strong></div><div class='description'><div class='short'>Create aliases for existing prototype methods. ...</div><div class='long'><p>Create aliases for existing prototype methods. Example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    method1: function() { ... },\n    method2: function() { ... }\n});\n\nvar test = new My.cool.Class();\n\nMy.cool.Class.createAlias({\n    method3: 'method1',\n    method4: 'method2'\n});\n\ntest.method3(); // test.method1()\n\nMy.cool.Class.createAlias('method5', 'method3');\n\ntest.method5(); // test.method3() -&gt; test.method1()\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>alias</span> : String/Object<div class='sub-desc'><p>The new method name, or an object to set multiple aliases. See\n<a href=\"#!/api/Ext.Function-method-flexSetter\" rel=\"Ext.Function-method-flexSetter\" class=\"docClass\">flexSetter</a></p>\n</div></li><li><span class='pre'>origin</span> : String/Object<div class='sub-desc'><p>The original method name</p>\n</div></li></ul></div></div></div><div id='static-method-from' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.util.Region'>Ext.util.Region</span><br/><a href='source/Region.html#Ext-util-Region-static-method-from' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Region-static-method-from' class='name expandable'>from</a>( <span class='pre'>Object o</span> ) : <a href=\"#!/api/Ext.util.Region\" rel=\"Ext.util.Region\" class=\"docClass\">Ext.util.Region</a><strong class='static signature'>static</strong></div><div class='description'><div class='short'>Creates new Region from an object:\n\nExt.util.Region.from({top: 0, right: 5, bottom: 3, left: -1});\n// the above is eq...</div><div class='long'><p>Creates new Region from an object:</p>\n\n<pre><code><a href=\"#!/api/Ext.util.Region-static-method-from\" rel=\"Ext.util.Region-static-method-from\" class=\"docClass\">Ext.util.Region.from</a>({top: 0, right: 5, bottom: 3, left: -1});\n// the above is equivalent to:\nnew <a href=\"#!/api/Ext.util.Region\" rel=\"Ext.util.Region\" class=\"docClass\">Ext.util.Region</a>(0, 5, 3, -1);\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>o</span> : Object<div class='sub-desc'><p>An object with top, right, bottom, left properties</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.util.Region\" rel=\"Ext.util.Region\" class=\"docClass\">Ext.util.Region</a></span><div class='sub-desc'><p>region The region constructed based on the passed object</p>\n</div></li></ul></div></div></div><div id='static-method-getName' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-static-method-getName' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-getName' class='name expandable'>getName</a>( <span class='pre'></span> ) : String<strong class='static signature'>static</strong></div><div class='description'><div class='short'>Get the current class' name in string format. ...</div><div class='long'><p>Get the current class' name in string format.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    constructor: function() {\n        alert(this.self.getName()); // alerts 'My.cool.Class'\n    }\n});\n\nMy.cool.Class.getName(); // 'My.cool.Class'\n</code></pre>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>className</p>\n</div></li></ul></div></div></div><div id='static-method-getRegion' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.util.Region'>Ext.util.Region</span><br/><a href='source/Region.html#Ext-util-Region-static-method-getRegion' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Region-static-method-getRegion' class='name expandable'>getRegion</a>( <span class='pre'>String/HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a> el</span> ) : <a href=\"#!/api/Ext.util.Region\" rel=\"Ext.util.Region\" class=\"docClass\">Ext.util.Region</a><strong class='static signature'>static</strong></div><div class='description'><div class='short'>Retrieves an Ext.util.Region for a particular element. ...</div><div class='long'><p>Retrieves an <a href=\"#!/api/Ext.util.Region\" rel=\"Ext.util.Region\" class=\"docClass\">Ext.util.Region</a> for a particular element.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>el</span> : String/HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a><div class='sub-desc'><p>The element or its ID.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.util.Region\" rel=\"Ext.util.Region\" class=\"docClass\">Ext.util.Region</a></span><div class='sub-desc'><p>region</p>\n</div></li></ul></div></div></div><div id='static-method-override' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-static-method-override' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-override' class='name expandable'>override</a>( <span class='pre'>Object members</span> ) : <a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a><strong class='deprecated signature'>deprecated</strong><strong class='static signature'>static</strong></div><div class='description'><div class='short'>Override members of this class. ...</div><div class='long'><p>Override members of this class. Overridden methods can be invoked via\n<a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a>.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        var instance = this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n\n        return instance;\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n\n<p>As of 4.1, direct use of this method is deprecated. Use <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>\ninstead:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.CatOverride', {\n    override: 'My.Cat',\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        var instance = this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n\n        return instance;\n    }\n});\n</code></pre>\n\n<p>The above accomplishes the same result but can be managed by the <a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a>\nwhich can properly order the override and its target class and the build process\ncan determine whether the override is needed based on the required state of the\ntarget class (My.Cat).</p>\n        <div class='signature-box deprecated'>\n        <p>This member has been <strong>deprecated</strong> since 4.1.0</p>\n        <p>Please use <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a> instead</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>members</span> : Object<div class='sub-desc'><p>The properties to add to this class. This should be\nspecified as an object literal containing one or more properties.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a></span><div class='sub-desc'><p>this class</p>\n</div></li></ul></div></div></div></div></div></div></div>","component":false,"uses":[],"code_type":"assignment","inheritdoc":null,"superclasses":["Ext.Base","Ext.util.Region"],"mixedInto":[],"mixins":[],"members":{"property":[{"owner":"Ext.util.Region","meta":{},"name":"","id":"property-","tagname":"property"},{"owner":"Ext.Base","meta":{"protected":true},"name":"self","id":"property-self","tagname":"property"}],"cfg":[],"css_var":[],"css_mixin":[],"event":[],"method":[{"owner":"Ext.util.Region","meta":{},"name":"constructor","id":"method-constructor","tagname":"method"},{"owner":"Ext.util.Region","meta":{},"name":"adjust","id":"method-adjust","tagname":"method"},{"owner":"Ext.Base","meta":{"protected":true},"name":"callOverridden","id":"method-callOverridden","tagname":"method"},{"owner":"Ext.Base","meta":{"protected":true},"name":"callParent","id":"method-callParent","tagname":"method"},{"owner":"Ext.util.Region","meta":{},"name":"constrainTo","id":"method-constrainTo","tagname":"method"},{"owner":"Ext.util.Region","meta":{},"name":"contains","id":"method-contains","tagname":"method"},{"owner":"Ext.util.Region","meta":{},"name":"copy","id":"method-copy","tagname":"method"},{"owner":"Ext.util.Region","meta":{},"name":"equals","id":"method-equals","tagname":"method"},{"owner":"Ext.Base","meta":{},"name":"getInitialConfig","id":"method-getInitialConfig","tagname":"method"},{"owner":"Ext.util.Region","meta":{},"name":"getOutOfBoundOffset","id":"method-getOutOfBoundOffset","tagname":"method"},{"owner":"Ext.util.Region","meta":{},"name":"getOutOfBoundOffsetX","id":"method-getOutOfBoundOffsetX","tagname":"method"},{"owner":"Ext.util.Region","meta":{},"name":"getOutOfBoundOffsetY","id":"method-getOutOfBoundOffsetY","tagname":"method"},{"owner":"Ext.Base","meta":{"protected":true},"name":"initConfig","id":"method-initConfig","tagname":"method"},{"owner":"Ext.util.Region","meta":{},"name":"intersect","id":"method-intersect","tagname":"method"},{"owner":"Ext.util.Region","meta":{},"name":"isOutOfBound","id":"method-isOutOfBound","tagname":"method"},{"owner":"Ext.util.Region","meta":{},"name":"isOutOfBoundX","id":"method-isOutOfBoundX","tagname":"method"},{"owner":"Ext.util.Region","meta":{},"name":"isOutOfBoundY","id":"method-isOutOfBoundY","tagname":"method"},{"owner":"Ext.util.Region","meta":{},"name":"partial","id":"method-partial","tagname":"method"},{"owner":"Ext.util.Region","meta":{},"name":"round","id":"method-round","tagname":"method"},{"owner":"Ext.Base","meta":{"protected":true},"name":"statics","id":"method-statics","tagname":"method"},{"owner":"Ext.util.Region","meta":{},"name":"toString","id":"method-toString","tagname":"method"},{"owner":"Ext.util.Region","meta":{},"name":"translateBy","id":"method-translateBy","tagname":"method"},{"owner":"Ext.util.Region","meta":{},"name":"union","id":"method-union","tagname":"method"}]},"allMixins":[],"meta":{},"private":false,"name":"Ext.util.Region","alternateClassNames":[],"aliases":{},"html_meta":{},"tagname":"class","extends":"Ext.Base","requires":[],"id":"class-Ext.util.Region","subclasses":[],"inheritable":false});