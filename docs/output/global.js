Ext.data.JsonP.global({"mixedInto":[],"html_filename":"","tagname":"class","allMixins":[],"statics":{"css_var":[],"cfg":[],"css_mixin":[],"event":[],"method":[{"static":true,"required":null,"tagname":"method","owner":"global","protected":false,"deprecated":null,"name":"from"}],"property":[]},"members":{"css_var":[],"css_mixin":[{"static":false,"required":null,"tagname":"css_mixin","owner":"global","protected":false,"deprecated":null,"name":"background-gradient"},{"static":false,"required":null,"tagname":"css_mixin","owner":"global","protected":false,"deprecated":null,"name":"bevel-box"},{"static":false,"required":null,"tagname":"css_mixin","owner":"global","protected":false,"deprecated":null,"name":"bevel-by-background"},{"static":false,"required":null,"tagname":"css_mixin","owner":"global","protected":false,"deprecated":null,"name":"bevel-text"},{"static":false,"required":null,"tagname":"css_mixin","owner":"global","protected":false,"deprecated":null,"name":"color-by-background"},{"static":false,"required":null,"tagname":"css_mixin","owner":"global","protected":false,"deprecated":null,"name":"insertion"},{"static":false,"required":null,"tagname":"css_mixin","owner":"global","protected":false,"deprecated":null,"name":"mask-by-background"},{"static":false,"required":null,"tagname":"css_mixin","owner":"global","protected":false,"deprecated":null,"name":"pictos-iconmask"},{"static":false,"required":null,"tagname":"css_mixin","owner":"global","protected":false,"deprecated":null,"name":"stretch"},{"static":false,"required":null,"tagname":"css_mixin","owner":"global","protected":false,"deprecated":null,"name":"toolbar-button"}],"cfg":[],"event":[],"method":[{"static":false,"required":null,"tagname":"method","owner":"global","protected":false,"deprecated":null,"name":"append"},{"static":false,"required":null,"tagname":"method","owner":"global","protected":false,"deprecated":null,"name":"insertAfter"},{"static":false,"required":null,"tagname":"method","owner":"global","protected":false,"deprecated":null,"name":"insertBefore"},{"static":false,"required":null,"tagname":"method","owner":"global","protected":false,"deprecated":null,"name":"insertFirst"},{"static":false,"required":null,"tagname":"method","owner":"global","protected":false,"deprecated":null,"name":"overwrite"}],"property":[{"static":false,"required":null,"tagname":"property","owner":"global","protected":false,"deprecated":null,"name":""}]},"linenr":0,"subclasses":[],"superclasses":[],"name":"global","mixins":[],"filename":"","component":false,"html":"<div><div class='doc-contents'><p>Global variables and functions.</p>\n</div><div class='members'><div id='m-property'><div class='definedBy'>Defined By</div><h3 class='members-title'>Properties</h3><div class='subsection'><div id='property-' class='member first-child not-inherited'><a href='#' class='side not-expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/global' rel='global' class='definedIn docClass'>global</a><br/><a href='source/_variables.scss.html#global-property-' target='_blank' class='viewSource'>view source</a></div><a href='#!/api/global-property-' class='name not-expandable'></a><span> : Object</span></div><div class='description'><div class='short'><p>@global {measurement} [$global-row-height=2.6em] The minimum row height for items like toolbars and list items.</p>\n</div><div class='long'><p>@global {measurement} [$global-row-height=2.6em] The minimum row height for items like toolbars and list items.</p>\n</div></div></div></div></div><div id='m-method'><h3 class='members-title'>Methods</h3><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Instance Methods</h3><div id='method-append' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/global' rel='global' class='definedIn docClass'>global</a><br/><a href='source/sencha-touch-debug.html#global-method-append' target='_blank' class='viewSource'>view source</a></div><a href='#!/api/global-method-append' class='name expandable'>append</a>( <span class='pre'>Mixed el, Object/Array values, [Boolean returnElement]</span> ) : HTMLElement/Ext.Element</div><div class='description'><div class='short'>Applies the supplied values to the template and appends\nthe new node(s) to the specified el. ...</div><div class='long'><p>Applies the supplied <code>values</code> to the template and appends\nthe new node(s) to the specified <code>el</code>.</p>\n\n<p>For example usage see the constructor.</p>\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>el</span> : Mixed<div class='sub-desc'><p>The context element</p>\n</div></li><li><span class='pre'>values</span> : Object/Array<div class='sub-desc'><p>The template values. Can be an array if the params are numeric (i.e. <code>{0}</code>)\nor an object (i.e. <code>{foo: 'bar'}</code>).</p>\n</div></li><li><span class='pre'>returnElement</span> : Boolean (optional)<div class='sub-desc'><p>true to return an Ext.Element (defaults to undefined)</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>HTMLElement/Ext.Element</span><div class='sub-desc'><p>The new node or Element</p>\n</div></li></ul></div></div></div><div id='method-insertAfter' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/global' rel='global' class='definedIn docClass'>global</a><br/><a href='source/sencha-touch-debug.html#global-method-insertAfter' target='_blank' class='viewSource'>view source</a></div><a href='#!/api/global-method-insertAfter' class='name expandable'>insertAfter</a>( <span class='pre'>Mixed el, Object/Array values, [Boolean returnElement]</span> ) : HTMLElement/Ext.Element</div><div class='description'><div class='short'>Applies the supplied values to the template and inserts the new node(s) after el. ...</div><div class='long'><p>Applies the supplied values to the template and inserts the new node(s) after el.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>el</span> : Mixed<div class='sub-desc'><p>The context element</p>\n</div></li><li><span class='pre'>values</span> : Object/Array<div class='sub-desc'><p>The template values. Can be an array if your params are numeric (i.e. {0}) or an object (i.e. {foo: 'bar'})</p>\n</div></li><li><span class='pre'>returnElement</span> : Boolean (optional)<div class='sub-desc'><p>true to return a Ext.Element (defaults to undefined)</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>HTMLElement/Ext.Element</span><div class='sub-desc'><p>The new node or Element</p>\n</div></li></ul></div></div></div><div id='method-insertBefore' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/global' rel='global' class='definedIn docClass'>global</a><br/><a href='source/sencha-touch-debug.html#global-method-insertBefore' target='_blank' class='viewSource'>view source</a></div><a href='#!/api/global-method-insertBefore' class='name expandable'>insertBefore</a>( <span class='pre'>Mixed el, Object/Array values, [Boolean returnElement]</span> ) : HTMLElement/Ext.Element</div><div class='description'><div class='short'>Applies the supplied values to the template and inserts the new node(s) before el. ...</div><div class='long'><p>Applies the supplied values to the template and inserts the new node(s) before el.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>el</span> : Mixed<div class='sub-desc'><p>The context element</p>\n</div></li><li><span class='pre'>values</span> : Object/Array<div class='sub-desc'><p>The template values. Can be an array if your params are numeric (i.e. {0}) or an object (i.e. {foo: 'bar'})</p>\n</div></li><li><span class='pre'>returnElement</span> : Boolean (optional)<div class='sub-desc'><p>true to return a Ext.Element (defaults to undefined)</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>HTMLElement/Ext.Element</span><div class='sub-desc'><p>The new node or Element</p>\n</div></li></ul></div></div></div><div id='method-insertFirst' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/global' rel='global' class='definedIn docClass'>global</a><br/><a href='source/sencha-touch-debug.html#global-method-insertFirst' target='_blank' class='viewSource'>view source</a></div><a href='#!/api/global-method-insertFirst' class='name expandable'>insertFirst</a>( <span class='pre'>Mixed el, Object/Array values, [Boolean returnElement]</span> ) : HTMLElement/Ext.Element</div><div class='description'><div class='short'>Applies the supplied values to the template and inserts the new node(s) as the first child of el. ...</div><div class='long'><p>Applies the supplied values to the template and inserts the new node(s) as the first child of el.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>el</span> : Mixed<div class='sub-desc'><p>The context element</p>\n</div></li><li><span class='pre'>values</span> : Object/Array<div class='sub-desc'><p>The template values. Can be an array if your params are numeric (i.e. {0}) or an object (i.e. {foo: 'bar'})</p>\n</div></li><li><span class='pre'>returnElement</span> : Boolean (optional)<div class='sub-desc'><p>true to return a Ext.Element (defaults to undefined)</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>HTMLElement/Ext.Element</span><div class='sub-desc'><p>The new node or Element</p>\n</div></li></ul></div></div></div><div id='method-overwrite' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/global' rel='global' class='definedIn docClass'>global</a><br/><a href='source/sencha-touch-debug.html#global-method-overwrite' target='_blank' class='viewSource'>view source</a></div><a href='#!/api/global-method-overwrite' class='name expandable'>overwrite</a>( <span class='pre'>Mixed el, Object/Array values, [Boolean returnElement]</span> ) : HTMLElement/Ext.Element</div><div class='description'><div class='short'>Applies the supplied values to the template and overwrites the content of el with the new node(s). ...</div><div class='long'><p>Applies the supplied values to the template and overwrites the content of el with the new node(s).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>el</span> : Mixed<div class='sub-desc'><p>The context element</p>\n</div></li><li><span class='pre'>values</span> : Object/Array<div class='sub-desc'><p>The template values. Can be an array if your params are numeric (i.e. {0}) or an object (i.e. {foo: 'bar'})</p>\n</div></li><li><span class='pre'>returnElement</span> : Boolean (optional)<div class='sub-desc'><p>true to return a Ext.Element (defaults to undefined)</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>HTMLElement/Ext.Element</span><div class='sub-desc'><p>The new node or Element</p>\n</div></li></ul></div></div></div></div><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Static Methods</h3><div id='method-from' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/global' rel='global' class='definedIn docClass'>global</a><br/><a href='source/sencha-touch-debug.html#global-method-from' target='_blank' class='viewSource'>view source</a></div><a href='#!/api/global-method-from' class='name expandable'>from</a>( <span class='pre'>String/HTMLElement el, Object config</span> ) : <a href=\"#!/api/Ext.Template\" rel=\"Ext.Template\" class=\"docClass\">Ext.Template</a><strong class='static-signature'>static</strong></div><div class='description'><div class='short'>Creates a template from the passed element's value (display:none textarea, preferred) or innerHTML. ...</div><div class='long'><p>Creates a template from the passed element's value (<i>display:none</i> textarea, preferred) or innerHTML.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>el</span> : String/HTMLElement<div class='sub-desc'><p>A DOM element or its id</p>\n</div></li><li><span class='pre'>config</span> : Object<div class='sub-desc'><p>A configuration object</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Template\" rel=\"Ext.Template\" class=\"docClass\">Ext.Template</a></span><div class='sub-desc'><p>The created template</p>\n</div></li></ul></div></div></div></div></div><div id='m-css_mixin'><div class='definedBy'>Defined By</div><h3 class='members-title'>CSS Mixins</h3><div class='subsection'><div id='css_mixin-background-gradient' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/global' rel='global' class='definedIn docClass'>global</a><br/><a href='source/_mixins.scss.html#global-css_mixin-background-gradient' target='_blank' class='viewSource'>view source</a></div><a href='#!/api/global-css_mixin-background-gradient' class='name expandable'>background-gradient</a>( <span class='pre'>color $bg-color, [string $type]</span> )</div><div class='description'><div class='short'>Add a background gradient to a selector. ...</div><div class='long'><p>Add a background gradient to a selector.</p>\n<ul><li><span class='pre'>$bg-color</span> : color<div class='sub-desc'><p>The base color of the gradient.</p>\n</div></li><li><span class='pre'>$type</span> : string (optional)<div class='sub-desc'><p>$base-gradient] The style of the gradient, one of five pre-defined options: matte, bevel, glossy, recessed, or flat.</p>\n\n<p>@example\n.my-element {\n  @include background-gradient(green, 'recessed')\n}</p>\n</div></li></ul></div></div></div><div id='css_mixin-bevel-box' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/global' rel='global' class='definedIn docClass'>global</a><br/><a href='source/_mixins.scss.html#global-css_mixin-bevel-box' target='_blank' class='viewSource'>view source</a></div><a href='#!/api/global-css_mixin-bevel-box' class='name expandable'>bevel-box</a>( <span class='pre'>string $type</span> )</div><div class='description'><div class='short'>Adds a small box shadow (or highlight) to give the impression of being beveled. ...</div><div class='long'><p>Adds a small box shadow (or highlight) to give the impression of being beveled.</p>\n<ul><li><span class='pre'>$type</span> : string<div class='sub-desc'><p>Either shadow or highlight, decides whether to apply a light shadow or dark.</p>\n</div></li></ul></div></div></div><div id='css_mixin-bevel-by-background' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/global' rel='global' class='definedIn docClass'>global</a><br/><a href='source/_mixins.scss.html#global-css_mixin-bevel-by-background' target='_blank' class='viewSource'>view source</a></div><a href='#!/api/global-css_mixin-bevel-by-background' class='name expandable'>bevel-by-background</a>( <span class='pre'>color $bg-color</span> )</div><div class='description'><div class='short'>Bevels the text based on its background. ...</div><div class='long'><p>Bevels the text based on its background.</p>\n<ul><li><span class='pre'>$bg-color</span> : color<div class='sub-desc'><p>Background color of element.\n@see bevel-text</p>\n</div></li></ul></div></div></div><div id='css_mixin-bevel-text' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/global' rel='global' class='definedIn docClass'>global</a><br/><a href='source/_mixins.scss.html#global-css_mixin-bevel-text' target='_blank' class='viewSource'>view source</a></div><a href='#!/api/global-css_mixin-bevel-text' class='name expandable'>bevel-text</a>( <span class='pre'>string $type</span> )</div><div class='description'><div class='short'>Adds a small text shadow (or highlight) to give the impression of beveled text. ...</div><div class='long'><p>Adds a small text shadow (or highlight) to give the impression of beveled text.</p>\n<ul><li><span class='pre'>$type</span> : string<div class='sub-desc'><p>Either shadow or highlight, decides whether to apply a light shadow or dark.</p>\n</div></li></ul></div></div></div><div id='css_mixin-color-by-background' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/global' rel='global' class='definedIn docClass'>global</a><br/><a href='source/_mixins.scss.html#global-css_mixin-color-by-background' target='_blank' class='viewSource'>view source</a></div><a href='#!/api/global-css_mixin-color-by-background' class='name expandable'>color-by-background</a>( <span class='pre'>color $bg-color, [percent $contrast]</span> )</div><div class='description'><div class='short'>Colors the text of an element based on lightness of its background. ...</div><div class='long'><p>Colors the text of an element based on lightness of its background.</p>\n<ul><li><span class='pre'>$bg-color</span> : color<div class='sub-desc'><p>Background color of element.</p>\n</div></li><li><span class='pre'>$contrast</span> : percent (optional)<div class='sub-desc'><p>%] Contrast of text color to its background.</p>\n\n<p>@example\n.my-element {\n  @include color-by-background(#fff); // Colors text black.\n}</p>\n\n<p>@example\n.my-element {\n  @include color-by-background(#fff, 40%); // Colors text gray.\n}</p>\n<p>Defaults to: <code>100</code></p></div></li></ul></div></div></div><div id='css_mixin-insertion' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/global' rel='global' class='definedIn docClass'>global</a><br/><a href='source/_mixins.scss.html#global-css_mixin-insertion' target='_blank' class='viewSource'>view source</a></div><a href='#!/api/global-css_mixin-insertion' class='name expandable'>insertion</a>( <span class='pre'>[measurement $width], [measurement $height], [measurement $top], [measurement $left]</span> )</div><div class='description'><div class='short'>Adds basic styles to :before or :after pseudo-elements. ...</div><div class='long'><p>Adds basic styles to :before or :after pseudo-elements.</p>\n<ul><li><span class='pre'>$width</span> : measurement (optional)<div class='sub-desc'><p>px] Height of pseudo-element.</p>\n<p>Defaults to: <code>30</code></p></div></li><li><span class='pre'>$height</span> : measurement (optional)<div class='sub-desc'><p>px] Height of pseudo-element.</p>\n<p>Defaults to: <code>30</code></p></div></li><li><span class='pre'>$top</span> : measurement (optional)<div class='sub-desc'><p>Top positioning of pseudo-element.</p>\n<p>Defaults to: <code>0</code></p></div></li><li><span class='pre'>$left</span> : measurement (optional)<div class='sub-desc'><p>Left positioning of pseudo-element.</p>\n\n<p>@example\n.my-element:after {\n  @include insertion(50px, 50px);\n}</p>\n<p>Defaults to: <code>0</code></p></div></li></ul></div></div></div><div id='css_mixin-mask-by-background' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/global' rel='global' class='definedIn docClass'>global</a><br/><a href='source/_mixins.scss.html#global-css_mixin-mask-by-background' target='_blank' class='viewSource'>view source</a></div><a href='#!/api/global-css_mixin-mask-by-background' class='name expandable'>mask-by-background</a>( <span class='pre'>color $bg-color, [percent $percent], [percent $style]</span> )</div><div class='description'><div class='short'>Creates a background gradient for masked elements, based on the lightness of their background. ...</div><div class='long'><p>Creates a background gradient for masked elements, based on the lightness of their background.</p>\n<ul><li><span class='pre'>$bg-color</span> : color<div class='sub-desc'><p>Background color of element.</p>\n</div></li><li><span class='pre'>$percent</span> : percent (optional)<div class='sub-desc'><p>%] Contrast of the new gradient to its background.</p>\n<p>Defaults to: <code>100</code></p></div></li><li><span class='pre'>$style</span> : percent (optional)<div class='sub-desc'><p>$base-gradient] Gradient style of the gradient.\n@see background-gradient</p>\n</div></li></ul></div></div></div><div id='css_mixin-pictos-iconmask' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/global' rel='global' class='definedIn docClass'>global</a><br/><a href='source/_mixins.scss.html#global-css_mixin-pictos-iconmask' target='_blank' class='viewSource'>view source</a></div><a href='#!/api/global-css_mixin-pictos-iconmask' class='name expandable'>pictos-iconmask</a>( <span class='pre'>string $name</span> )</div><div class='description'><div class='short'>Includes a base64-encoded icon for use within tab bars and buttons (With the component parameter iconMask: true). ...</div><div class='long'><p>Includes a base64-encoded icon for use within tab bars and buttons (With the component parameter iconMask: true).</p>\n<ul><li><span class='pre'>$name</span> : string<div class='sub-desc'><p>The name of the icon to be included. This is to match the name of the icon file (located at resources/themes/images/default/pictos) without its extention (.png).</p>\n\n<p>@example\n@include pictos-iconmask('attachment');</p>\n</div></li></ul></div></div></div><div id='css_mixin-stretch' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/global' rel='global' class='definedIn docClass'>global</a><br/><a href='source/_mixins.scss.html#global-css_mixin-stretch' target='_blank' class='viewSource'>view source</a></div><a href='#!/api/global-css_mixin-stretch' class='name expandable'>stretch</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Makes an element stretch to its parent's bounds. ...</div><div class='long'><p>Makes an element stretch to its parent's bounds.</p>\n</div></div></div><div id='css_mixin-toolbar-button' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/global' rel='global' class='definedIn docClass'>global</a><br/><a href='source/_mixins.scss.html#global-css_mixin-toolbar-button' target='_blank' class='viewSource'>view source</a></div><a href='#!/api/global-css_mixin-toolbar-button' class='name expandable'>toolbar-button</a>( <span class='pre'>color $bg-color, [color $type]</span> )</div><div class='description'><div class='short'>Includes the default styles for toolbar buttons, mostly used as a helper function. ...</div><div class='long'><p>Includes the default styles for toolbar buttons, mostly used as a helper function.</p>\n<ul><li><span class='pre'>$bg-color</span> : color<div class='sub-desc'><p>Base color to be used for the button.</p>\n</div></li><li><span class='pre'>$type</span> : color (optional)<div class='sub-desc'><p>$button-gradient] $type Gradient style for the button, will automatically use \"recessed\" when pressed.</p>\n</div></li></ul></div></div></div></div></div></div></div>","alternateClassNames":[]});